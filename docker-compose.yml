version: '3'
services:
 db: # 서비스 명
    image: mysql:5.7 # 사용할 이미지
    restart: always
    command: --lower_case_table_names=1
    container_name: mysql # 컨테이너 이름 설정
    ports:
      - "3307:3306" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)  <- 컨테이너 내부는 무조건 3306
    environment: # -e 옵션
      - MYSQL_DATABASE=messenger
      - MYSQL_ROOT_PASSWORD=1234  # MYSQL 패스워드 설정 옵션
      - TZ=Asia/Seoul

    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
 zookeeper:
   container_name: zookeeper
   image: wurstmeister/zookeeper:3.4.6
   ports:
     - "2181:2181"
 kafka:
   container_name: kafka
   image: wurstmeister/kafka:2.12-2.2.0
   ports:
     - "9094:9094"
     - "1099:1099"
   environment:
     HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
#     HOSTNAME_COMMAND: "localhost"
     PORT_COMMAND: "docker port `hostname` 9094 | cut -d: -f 2"
     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9094,OUTSIDE://_{HOSTNAME_COMMAND}:_{PORT_COMMAND}
     KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9094
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099"
     JMX_PORT: 1099
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock
 kafka-producer-perf-test:
   image: wurstmeister/kafka:2.12-2.2.0
   command: >
     bash -c "until kafka-topics.sh --zookeeper zookeeper:2181 --create --topic replicated-topic --partitions 3 --replication-factor 1 --if-not-exists; do echo \"Waiting for Kafka to be ready..\"; done
     && kafka-producer-perf-test.sh --topic kafka-chat --num-records 10000000 --record-size 10 --throughput 1000 --producer-props bootstrap.servers=kafka:9094"
 # each kafka-consumer-test has its own consumer.id so it can be differentiated by consumer group information easily.
 consumer-group1-consumer1:
   image: wurstmeister/kafka:2.12-2.2.0
   command: >
     bash -c "until kafka-topics.sh --zookeeper zookeeper:2181 --create --topic replicated-topic --partitions 3 --replication-factor 1 --if-not-exists; do echo \"Waiting for Kafka to be ready..\"; done
     && kafka-console-consumer.sh --consumer-property group.id=test-consumer-group --consumer-property client.id=test-client-id-1 --consumer-property enable.auto.commit=true --topic kafka-chat --bootstrap-server kafka:9094 > /dev/null"
 consumer-group1-consumer2:
   image: wurstmeister/kafka:2.12-2.2.0
   command: >
     bash -c "until kafka-topics.sh --zookeeper zookeeper:2181 --create --topic replicated-topic --partitions 3 --replication-factor 1 --if-not-exists; do echo \"Waiting for Kafka to be ready..\"; done
     && kafka-console-consumer.sh --consumer-property group.id=test-consumer-group --consumer-property client.id=test-client-id-2 --consumer-property enable.auto.commit=true --topic kafka-chat --bootstrap-server kafka:9094 > /dev/null"
 consumer-group1-consumer3:
   image: wurstmeister/kafka:2.12-2.2.0
   command: >
     bash -c "until kafka-topics.sh --zookeeper zookeeper:2181 --create --topic replicated-topic --partitions 3 --replication-factor 1 --if-not-exists; do echo \"Waiting for Kafka to be ready..\"; done
     && kafka-console-consumer.sh --consumer-property group.id=test-consumer-group --consumer-property client.id=test-client-id-3 --consumer-property enable.auto.commit=true --topic kafka-chat --bootstrap-server kafka:9094 > /dev/null"
 consumer-group2-consumer1:
   image: wurstmeister/kafka:2.12-2.2.0
   command: >
     bash -c "until kafka-topics.sh --zookeeper zookeeper:2181 --create --topic replicated-topic --partitions 3 --replication-factor 1 --if-not-exists; do echo \"Waiting for Kafka to be ready..\"; done
     && kafka-console-consumer.sh --consumer-property group.id=test-consumer-group-two --consumer-property client.id=test-client-two-id-1 --consumer-property enable.auto.commit=true --topic kafka-chat --bootstrap-server kafka:9094 > /dev/null"